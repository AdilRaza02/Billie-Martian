{"version":3,"sources":["components/AppSideMenu/AppSideMenu.module.css","components/AppSideMenu/AppSideMenu.jsx","components/AppFooter/AppFooter.jsx","utils/utils.js","components/BudgetForm/BudgetForm.jsx","components/UpdateModal/UpdateModal.jsx","components/CustomersList/CustomersList.jsx","components/Card/Card.jsx","components/Research/Research.jsx","components/Dashboard/Dashboard.jsx","store/model.js","App.js","index.js"],"names":["module","exports","AppSideMenu","useState","collapsed","setCollapsed","Sider","collapsible","onCollapse","className","styles","logo","theme","defaultSelectedKeys","window","location","pathname","mode","Item","icon","AreaChartOutlined","to","UserOutlined","CodeOutlined","href","AppFooter","Footer","style","textAlign","utils","formatGermanDate","date","Date","toLocaleDateString","year","month","day","formatGermanCurrency","money","toLocaleString","currency","BudgetForm","selectedRow","useStoreState","state","update","useStoreActions","actions","Form","useForm","form","setFieldsValue","newBudget","budget","name","onFinish","id","message","success","onFinishFailed","error","textAlignVertical","label","rules","required","validator","_","value","parseFloat","budget_spent","Promise","resolve","reject","type","suffix","placeholder","wrapperCol","offset","htmlType","UpdateModal","toggle","labelCol","span","title","visible","onCancel","footer","forceRender","CustomersList","customers","isModelOpen","selectRow","fontSize","marginBottom","dataSource","pagination","rowKey","record","onRow","row","onClick","onClickRow","Column","dataIndex","render","date_of_first_purchase","Card","props","height","fontWeight","content","Research","gutter","researchData","problem_title","problems","map","problem","index","xs","xl","md","marginTop","bordered","hmw_question","solutions","Dashboard","basename","minHeight","Content","margin","padding","exact","path","action","forEach","customer","parseInt","store","createStore","model","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fdece5ce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"AppSideMenu_logo__14OtM\",\"logo-small\":\"AppSideMenu_logo-small__mTH9d\"};","import { Layout, Menu } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\n\r\nimport {\r\n  AreaChartOutlined,\r\n  UserOutlined,\r\n  CodeOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport styles from \"../AppSideMenu/AppSideMenu.module.css\";\r\n\r\nfunction AppSideMenu() {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const toggleCollapsed = () => {\r\n    setCollapsed((collapsed) => !collapsed);\r\n  };\r\n\r\n  return (\r\n    <Layout.Sider\r\n      collapsible\r\n      collapsed={collapsed}\r\n      onCollapse={toggleCollapsed}\r\n    >\r\n      <div\r\n        className={\r\n          collapsed\r\n            ? `${styles.logo} ${styles[\"logo-small\"]}`\r\n            : `${styles.logo}`\r\n        }\r\n      >\r\n        Billie-Martian\r\n      </div>\r\n      <Menu\r\n        theme=\"dark\"\r\n        defaultSelectedKeys={[window.location.pathname]}\r\n        mode=\"inline\"\r\n      >\r\n        <Menu.Item key=\"/\" icon={<AreaChartOutlined />}>\r\n          <span>Research</span>\r\n          <Link to=\"/\" />\r\n        </Menu.Item>\r\n        <Menu.Item key=\"/customers\" icon={<UserOutlined />}>\r\n          <span>Customers</span>\r\n          <Link to=\"/customers\" />\r\n        </Menu.Item>\r\n        <Menu.Item key=\"/codebase\" icon={<CodeOutlined />}>\r\n          <a href=\"https://github.com/AdilRaza02/Billie-Martian-Home-Test\">\r\n            Codebase\r\n          </a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Layout.Sider>\r\n  );\r\n}\r\n\r\nexport default AppSideMenu;\r\n","import { Layout } from \"antd\";\r\n\r\nfunction AppFooter() {\r\n  return (\r\n    <Layout.Footer style={{ textAlign: \"center\" }}>\r\n      Developed with ‚ù§ by Adil Raza in Munich\r\n    </Layout.Footer>\r\n  );\r\n}\r\n\r\nexport default AppFooter;\r\n","const formatGermanDate = (date) => {\r\n  var deDate = new Date(date);\r\n  return deDate.toLocaleDateString(\"de-DE\", {\r\n    year: \"numeric\",\r\n    month: \"2-digit\",\r\n    day: \"2-digit\",\r\n  });\r\n};\r\n\r\nconst formatGermanCurrency = (money) => {\r\n  return money.toLocaleString(\"de-DE\", {\r\n    style: \"currency\",\r\n    currency: \"EUR\",\r\n  });\r\n};\r\n\r\nconst utils = { formatGermanDate, formatGermanCurrency };\r\nexport default utils;\r\n","import { Form, Input, Button, message } from \"antd\";\r\nimport { useStoreActions, useStoreState } from \"easy-peasy\";\r\n\r\nfunction BudgetForm() {\r\n  const selectedRow = useStoreState((state) => state.selectedRow);\r\n  const update = useStoreActions((actions) => actions.update);\r\n\r\n  const [form] = Form.useForm();\r\n  form.setFieldsValue({\r\n    newBudget: selectedRow.budget,\r\n  });\r\n\r\n  const tailLayout = {\r\n    wrapperCol: { offset: 20 },\r\n  };\r\n\r\n  const onFinish = (budget) => {\r\n    update({ id: selectedRow.id, budget: budget.newBudget });\r\n    message.success(\"Budget Successfully Updated!\");\r\n  };\r\n\r\n  const onFinishFailed = () => {\r\n    message.error(\"Something went wrong. Please Try Again!\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form\r\n        name=\"update_budget\"\r\n        form={form}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n      >\r\n        <Form.Item style={{ textAlign: \"center\", textAlignVertical: \"center\" }}>\r\n          <h3> {selectedRow.name}</h3>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Update Budget\"\r\n          name=\"newBudget\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"This field is mandatory!\",\r\n            },\r\n\r\n            {\r\n              validator(_, value) {\r\n                if (parseFloat(value) >= selectedRow.budget_spent) {\r\n                  return Promise.resolve();\r\n                }\r\n\r\n                return Promise.reject(\r\n                  \"The value must not be less than the budget spent.\"\r\n                );\r\n              },\r\n            },\r\n          ]}\r\n        >\r\n          <Input type=\"number\" suffix=\"‚Ç¨\" placeholder=\"Enter New Budget\" />\r\n        </Form.Item>\r\n        <Form.Item {...tailLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Update\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BudgetForm;\r\n","import { Modal } from \"antd\";\r\nimport { useStoreActions } from \"easy-peasy\";\r\nimport BudgetForm from \"../BudgetForm/BudgetForm\";\r\n\r\nfunction UpdateModal() {\r\n  const toggle = useStoreActions((actions) => actions.toggle);\r\n\r\n  const layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 7 },\r\n  };\r\n  const onCancelModal = () => {\r\n    toggle();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      {...layout}\r\n      name=\"basic\"\r\n      title=\"Update Budget Form\"\r\n      visible={true}\r\n      onCancel={onCancelModal}\r\n      footer={null}\r\n      forceRender\r\n    >\r\n      <BudgetForm />\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default UpdateModal;\r\n","import { Table } from \"antd\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport utils from \"../../utils/utils\";\r\nimport UpdateModal from \"../UpdateModal/UpdateModal\";\r\n\r\nfunction CustomersList() {\r\n  const { customers, isModelOpen } = useStoreState((state) => ({\r\n    customers: state.customers,\r\n    isModelOpen: state.isModelOpen,\r\n  }));\r\n  const { toggle, selectRow } = useStoreActions((actions) => ({\r\n    toggle: actions.toggle,\r\n    selectRow: actions.selectRow,\r\n  }));\r\n\r\n  const onClickRow = (row) => {\r\n    selectRow(row);\r\n    toggle();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ fontSize: \"2rem\", marginBottom: \"2rem\" }}>Customers</h1>\r\n\r\n      <Table\r\n        dataSource={customers}\r\n        pagination={false}\r\n        rowKey={(record) => record.id}\r\n        onRow={(row) => {\r\n          return {\r\n            onClick: () => onClickRow(row),\r\n          };\r\n        }}\r\n      >\r\n        <Table.Column title=\"Company Name\" dataIndex=\"name\" key=\"name\" />\r\n        <Table.Column\r\n          title=\"Total Budget\"\r\n          key=\"budget\"\r\n          render={(row) => `${utils.formatGermanCurrency(row.budget)}`}\r\n        />\r\n        <Table.Column\r\n          title=\"Budget Spent\"\r\n          key=\"budget_spent\"\r\n          render={(row) => `${utils.formatGermanCurrency(row.budget_spent)}`}\r\n        />\r\n        <Table.Column\r\n          title=\"Budget Left\"\r\n          key=\"budget_left\"\r\n          render={(row) =>\r\n            `${utils.formatGermanCurrency(row.budget - row.budget_spent)}`\r\n          }\r\n        />\r\n        <Table.Column\r\n          title=\"Date of a First Purchase\"\r\n          key=\"date_of_first_purchase\"\r\n          render={(row) =>\r\n            `${utils.formatGermanDate(row.date_of_first_purchase)}`\r\n          }\r\n        />\r\n      </Table>\r\n\r\n      {isModelOpen && <UpdateModal />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomersList;\r\n","import { Card as CardUI } from \"antd\";\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <CardUI style={{ height: 250 }}>\r\n      <h2 style={{ fontWeight: \"normal\" }}>{props.content}</h2>\r\n    </CardUI>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import { Col, Row } from \"antd\";\r\nimport Card from \"../Card/Card\";\r\nimport researchData from \"../../dbstore/research.json\";\r\n\r\nfunction Research() {\r\n  return (\r\n    <Row gutter={16}>\r\n      <Col span={24}>\r\n        <h1 style={{ fontSize: \"2rem\" }}>{researchData.problem_title}</h1>\r\n      </Col>\r\n\r\n      {researchData.problems.map((problem, index) => (\r\n        <Col key={index} xs={24} xl={4} md={6} style={{ marginTop: \"0.5rem\" }}>\r\n          <Card content={problem} bordered={false} />\r\n        </Col>\r\n      ))}\r\n\r\n      <Col span={24}>\r\n        <h1 style={{ fontSize: \"2rem\", marginTop: \"2rem\" }}>\r\n          {researchData.hmw_question}\r\n        </h1>\r\n      </Col>\r\n\r\n      {researchData.solutions.map((problem, index) => (\r\n        <Col key={index} xs={24} xl={6} md={6} style={{ marginTop: \"0.5rem\" }}>\r\n          <Card content={problem} bordered={false} />\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default Research;\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Layout } from \"antd\";\r\nimport AppSideMenu from \"../AppSideMenu/AppSideMenu\";\r\nimport AppFooter from \"../AppFooter/AppFooter\";\r\nimport CustomersList from \"../CustomersList/CustomersList\";\r\nimport Research from \"../Research/Research\";\r\n\r\nfunction Dashboard() {\r\n  return (\r\n    <Router basename=\"/Billie-Martian-Home-Test\">\r\n      <Layout style={{ minHeight: \"100vh\" }}>\r\n        <AppSideMenu />\r\n        <Layout>\r\n          <Layout.Content style={{ margin: \"16px 5px\" }}>\r\n            <div style={{ padding: 24, minHeight: 360 }}>\r\n              <Switch>\r\n                <Route exact path=\"/\">\r\n                  <Research />\r\n                </Route>\r\n                <Route path=\"/customers\">\r\n                  <CustomersList />\r\n                </Route>\r\n              </Switch>\r\n            </div>\r\n          </Layout.Content>\r\n          <AppFooter />\r\n        </Layout>\r\n      </Layout>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import customerData from \"../dbstore/customers.json\";\r\nimport { action } from \"easy-peasy\";\r\n\r\nexport default {\r\n  customers: customerData,\r\n  isModelOpen: false,\r\n  selectedRow: {},\r\n\r\n  //Actions\r\n\r\n  toggle: action((state) => {\r\n    state.isModelOpen = !state.isModelOpen;\r\n  }),\r\n\r\n  selectRow: action((state, row) => {\r\n    state.selectedRow = row;\r\n  }),\r\n\r\n  update: action((state, row) => {\r\n    state.customers.forEach((customer) => {\r\n      if (customer.id === row.id) {\r\n        customer.budget = parseInt(row.budget);\r\n        state.isModelOpen = false;\r\n      }\r\n    });\r\n  }),\r\n};\r\n","import Dashboard from \"./components/Dashboard/Dashboard\";\r\nimport { StoreProvider, createStore } from \"easy-peasy\";\r\n\r\nimport model from \"./store/model\";\r\n\r\nconst store = createStore(model);\r\n\r\nfunction App() {\r\n  return (\r\n    <StoreProvider store={store}>\r\n      <Dashboard />\r\n    </StoreProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}